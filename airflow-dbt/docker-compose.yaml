version: '3.8'
services:
  postgres:
    image: 'postgres:13'
    environment:
      - PGUSER=airflow
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - '5432:5432'

  webserver:
    build: .
    user: "${UID}:${GID}"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - _AIRFLOW_DB_UPGRADE='true'
    entrypoint: ./scripts/webserver_entrypoint.sh
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - './dags:/opt/airflow/dags'
      - './logs:/opt/airflow/logs'
      - './scripts:/opt/airflow/scripts'
      - './datawarehouse:/opt/airflow/dbt'
    ports:
      - '8080:8080'

  scheduler:
    build: .
    user: "${UID}:${GID}"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - _AIRFLOW_DB_UPGRADE='true'
    entrypoint: ./scripts/scheduler_entrypoint.sh
    env_file:
      - .env
    restart: always
    depends_on:
      - webserver
    volumes:
      - './dags:/opt/airflow/dags'
      - './logs:/opt/airflow/logs'
      - './scripts:/opt/airflow/scripts'
      - './datawarehouse:/opt/airflow/dbt'
